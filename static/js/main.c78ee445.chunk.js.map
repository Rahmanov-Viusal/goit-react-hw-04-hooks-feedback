{"version":3,"sources":["components/Statistics/Statistic.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistic__list","statistic__item","Section","title","children","section","Notification","message","Container","container","types","GOOD","NEUTRAL","BAD","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","values","value","prevState","Error","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,gBAAkB,qC,kBCAzFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,qICoBfC,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,wBACEC,UAAWC,IAAEC,IAEbC,KAAK,SACL,gBAAeJ,EACfK,QAAS,kBAAMP,EAAgBE,IALjC,SAOGA,GALIA,O,gBCkBIM,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIV,UAAWC,IAAEU,gBAAjB,UACE,qBAAIX,UAAWC,IAAEW,gBAAjB,kBAAwCN,KACxC,qBAAIN,UAAWC,IAAEW,gBAAjB,qBAA2CL,KAC3C,qBAAIP,UAAWC,IAAEW,gBAAjB,iBAAuCJ,KACvC,qBAAIR,UAAWC,IAAEW,gBAAjB,mBAAyCH,OACzC,qBAAIT,UAAWC,IAAEW,gBAAjB,+BACqBN,EAAOI,IAAuB,EADnD,W,gBCOSG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACGF,GAAS,oBAAId,UAAWC,IAAEa,MAAjB,SAAyBA,IAClCC,M,gBCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGlB,UAAWC,IAAEiB,QAAhB,SAA0BA,I,oBCOpBC,MARf,YAAkC,IAAbJ,EAAY,EAAZA,SACnB,OAAO,qBAAKf,UAAWC,IAAEmB,UAAlB,SAA8BL,KCGjCM,EAAQ,CACZC,KAAM,OACNC,QAAS,UACTC,IAAK,OAyDQC,EAvDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYqB,EAAZ,KAqBMC,EAAqB,WACzB,OAAOxB,EAAOC,EAAUC,GAOpBZ,EAAUmC,OAAOC,OAAOX,GAE9B,OACE,eAAC,EAAD,CAAWrB,UAAU,MAArB,UACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBlB,QAASA,EAASC,gBAhCjB,SAAAoC,GACtB,OAAQA,GACN,KAAKZ,EAAMC,KACTK,GAAQ,SAAAO,GAAS,OAAIA,EAAY,KACjC,MAEF,KAAKb,EAAME,QACTK,GAAW,SAAAM,GAAS,OAAIA,EAAY,KACpC,MAEF,KAAKb,EAAMG,IACTK,GAAO,SAAAK,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,MAAM,IAAIC,YAmBZ,cAAC,EAAD,CAASrB,MAAM,aAAf,SACGgB,IACC,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,mBAlBiB,WACzB,OAAO0B,KAAKC,MAAO/B,EAAOwB,IAAwB,QAoB5C,cAACb,EAAD,CAAcC,QAAQ,4BCxDhCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c78ee445.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__list\":\"Statistic_statistic__list__16dvK\",\"statistic__item\":\"Statistic_statistic__item__1HOW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map(option => (\n    <button\n      className={s.btn}\n      key={option}\n      type=\"button\"\n      data-feedback={option}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistic.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.statistic__list}>\n      <li className={s.statistic__item}>good:{good}</li>\n      <li className={s.statistic__item}>neutral:{neutral}</li>\n      <li className={s.statistic__item}>bad:{bad}</li>\n      <li className={s.statistic__item}>total:{total()}</li>\n      <li className={s.statistic__item}>\n        Positive feedback:{good ? positivePercentage() : 0}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport Container from './components/Container';\n\nconst types = {\n  GOOD: 'good',\n  NEUTRAL: 'neutral',\n  BAD: 'bad',\n};\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = value => {\n    switch (value) {\n      case types.GOOD:\n        setGood(prevState => prevState + 1);\n        break;\n\n      case types.NEUTRAL:\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case types.BAD:\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const positivePercentage = () => {\n    return Math.floor((good / countTotalFeedback()) * 100);\n  };\n\n  const options = Object.values(types);\n\n  return (\n    <Container className=\"App\">\n      <Section title=\"please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      <Section title=\"statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </Container>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}